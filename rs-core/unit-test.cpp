// This file is automatically generated

#include "unicorn/unit-test.hpp"

extern void test_core_common_accountable();
extern void test_core_common_preprocessor_macros();
extern void test_core_common_integer_types();
extern void test_core_common_string_types();
extern void test_core_common_metaprogramming();
extern void test_core_common_smart_pointers();
extern void test_core_common_type_adapters();
extern void test_core_common_type_related_functions();
extern void test_core_common_arithmetic_literals();
extern void test_core_common_generic_algorithms();
extern void test_core_common_integer_sequences();
extern void test_core_common_memory_algorithms();
extern void test_core_common_generic_arithmetic();
extern void test_core_common_integer_arithmetic();
extern void test_core_common_function_traits();
extern void test_core_common_function_operations();
extern void test_core_common_generic_function_objects();
extern void test_core_common_hash_functions();
extern void test_core_common_scope_guards();
extern void test_core_common_logging();
extern void test_core_common_thread_class();
extern void test_core_algorithm_diff();
extern void test_core_algorithm_edit_distance();
extern void test_core_algorithm_find_optimum();
extern void test_core_algorithm_order_by_index();
extern void test_core_algorithm_paired_for_each();
extern void test_core_algorithm_paired_sort();
extern void test_core_algorithm_paired_transform();
extern void test_core_array_map_array_map();
extern void test_core_array_map_array_set();
extern void test_core_array_map_general_associative_containers();
extern void test_core_astronomy_interpolation_map();
extern void test_core_astronomy_physical_constants();
extern void test_core_astronomy_astronomical_constants();
extern void test_core_astronomy_coordinate_systems();
extern void test_core_astronomy_solar_system_data();
extern void test_core_astronomy_stellar_property_relations();
extern void test_core_astronomy_spectral_classification();
extern void test_core_astronomy_hertzsprung_russell_diagram();
extern void test_core_auto_array_auto_vector_construction();
extern void test_core_auto_array_auto_vector_defaults();
extern void test_core_auto_array_auto_vector_element_access();
extern void test_core_auto_array_auto_vector_insert_erase();
extern void test_core_auto_array_auto_vector_comparison();
extern void test_core_auto_array_auto_deque_construction();
extern void test_core_auto_array_auto_deque_defaults();
extern void test_core_auto_array_auto_deque_element_access();
extern void test_core_auto_array_auto_deque_insert_erase();
extern void test_core_auto_array_auto_deque_comparison();
extern void test_core_blob_class();
extern void test_core_bounded_array_construction();
extern void test_core_bounded_array_capacity();
extern void test_core_bounded_array_insertion();
extern void test_core_bounded_array_accounting();
extern void test_core_bounded_array_keys();
extern void test_core_cache_class();
extern void test_core_channel_true();
extern void test_core_channel_false();
extern void test_core_channel_generator();
extern void test_core_channel_buffer();
extern void test_core_channel_queue();
extern void test_core_channel_value();
extern void test_core_channel_timer();
extern void test_core_channel_throttle();
extern void test_core_channel_dispatch_empty();
extern void test_core_channel_dispatch_sync_close();
extern void test_core_channel_dispatch_async_close();
extern void test_core_channel_dispatch_sync_exception();
extern void test_core_channel_dispatch_async_exception();
extern void test_core_channel_dispatch_multiple_sync_exception();
extern void test_core_channel_dispatch_multiple_async_exception();
extern void test_core_channel_dispatch_heterogeneous_sync_exception();
extern void test_core_channel_dispatch_heterogeneous_async_exception();
extern void test_core_channel_dispatch_sync_message_channel();
extern void test_core_channel_dispatch_async_message_channel();
extern void test_core_channel_dispatch_sync_stream_channel();
extern void test_core_channel_dispatch_async_stream_channel();
extern void test_core_compact_array_construction();
extern void test_core_compact_array_capacity();
extern void test_core_compact_array_insertion();
extern void test_core_compact_array_accounting();
extern void test_core_compact_array_keys();
extern void test_core_digest_bernstein();
extern void test_core_digest_kernighan();
extern void test_core_digest_crc32();
extern void test_core_digest_djb2a();
extern void test_core_digest_fnv1a_32();
extern void test_core_digest_fnv1a_64();
extern void test_core_digest_murmur3_32();
extern void test_core_digest_siphash();
extern void test_core_digest_md5();
extern void test_core_digest_sha1();
extern void test_core_digest_sha256();
extern void test_core_digest_sha512();
extern void test_core_dso_dynamic_library();
extern void test_core_encoding_escape();
extern void test_core_encoding_quote();
extern void test_core_encoding_hex();
extern void test_core_encoding_base32();
extern void test_core_encoding_base64();
extern void test_core_encoding_ascii85();
extern void test_core_encoding_z85();
extern void test_source_english_case_conversion();
extern void test_source_english_list_formatting();
extern void test_source_english_number_formatting();
extern void test_source_english_pluralization();
extern void test_core_file_system_standard_directories();
extern void test_core_file_system_search_path();
extern void test_core_fixed_binary_implementation_selection();
extern void test_core_fixed_binary_small_binary();
extern void test_core_fixed_binary_large_binary();
extern void test_core_fixed_binary_random_numbers();
extern void test_core_fixed_binary_random_arithmetic_tests();
extern void test_core_fixed_binary_type_conversions();
extern void test_core_fixed_binary_string_parsing();
extern void test_core_fixed_binary_hash_set();
extern void test_core_fixed_binary_numeric_limits();
extern void test_core_float_arithmetic_constants();
extern void test_core_float_arithmetic_functions();
extern void test_core_float_arithmetic_literals();
extern void test_core_float_line_integral();
extern void test_core_float_volume_integral();
extern void test_core_float_precision_sum();
extern void test_core_float_root_finding_parameters();
extern void test_core_float_bisection();
extern void test_core_float_false_position();
extern void test_core_float_newton_raphson();
extern void test_core_float_pseudo_newton_raphson();
extern void test_core_grid_class();
extern void test_core_index_table_classes();
extern void test_core_int128_uint128_basics();
extern void test_core_int128_uint128_arithmetic();
extern void test_core_int128_uint128_bitwise_properties();
extern void test_core_int128_uint128_conversion();
extern void test_core_int128_uint128_representation();
extern void test_core_int128_uint128_literals();
extern void test_core_int128_uint128_numeric_limits();
extern void test_source_interval_basic_type_traits();
extern void test_source_interval_continuous_basic_properties();
extern void test_source_interval_continuous_string_parsing();
extern void test_source_interval_continuous_inverse();
extern void test_source_interval_continuous_binary_operations();
extern void test_source_interval_continuous_set_construct_insert_erase();
extern void test_source_interval_continuous_set_operations();
extern void test_source_interval_continuous_map();
extern void test_source_interval_integral_basic_properties();
extern void test_source_interval_integral_string_parsing();
extern void test_source_interval_integral_iterators();
extern void test_source_interval_integral_inverse();
extern void test_source_interval_integral_binary_operations();
extern void test_source_interval_integral_set_construct_insert_erase();
extern void test_source_interval_integral_set_operations();
extern void test_source_interval_integral_map();
extern void test_source_interval_ordered_basic_properties();
extern void test_source_interval_ordered_string_parsing();
extern void test_source_interval_ordered_inverse();
extern void test_source_interval_ordered_binary_operations();
extern void test_source_interval_ordered_set_construct_insert_erase();
extern void test_source_interval_ordered_set_operations();
extern void test_source_interval_ordered_map();
extern void test_core_io_cstdio();
extern void test_core_io_fdio();
extern void test_core_io_pipe();
extern void test_core_io_winio();
extern void test_core_io_null_device();
extern void test_core_io_external_buffer();
extern void test_core_io_internal_buffer();
extern void test_core_io_print_formatting();
extern void test_core_io_anonymous_temporary_file();
extern void test_core_io_named_temporary_file();
extern void test_core_ipc_named_mutex();
extern void test_source_marked_value_access();
extern void test_source_marked_conversion_operators();
extern void test_source_marked_copying_and_moving();
extern void test_source_marked_string_conversion();
extern void test_source_marked_json_conversion();
extern void test_source_marked_boolean_conversion();
extern void test_source_marked_comparison_operators();
extern void test_source_marked_arithmetic_operators();
extern void test_source_marked_function_call_operators();
extern void test_source_marked_subscript_operators();
extern void test_source_marked_hash_functions();
extern void test_source_marked_checked_values();
extern void test_core_meta_logic();
extern void test_core_meta_append();
extern void test_core_meta_concat();
extern void test_core_meta_insert();
extern void test_core_meta_insert_at();
extern void test_core_meta_most();
extern void test_core_meta_prefix();
extern void test_core_meta_rep_list();
extern void test_core_meta_rep_type();
extern void test_core_meta_resize();
extern void test_core_meta_skip();
extern void test_core_meta_sublist();
extern void test_core_meta_tail();
extern void test_core_meta_take();
extern void test_core_meta_head();
extern void test_core_meta_last();
extern void test_core_meta_max_type();
extern void test_core_meta_type_at();
extern void test_core_meta_fold();
extern void test_core_meta_make_set();
extern void test_core_meta_map();
extern void test_core_meta_partial_reduce();
extern void test_core_meta_remove();
extern void test_core_meta_reverse();
extern void test_core_meta_select();
extern void test_core_meta_sort();
extern void test_core_meta_unique();
extern void test_core_meta_zip();
extern void test_core_meta_inherit();
extern void test_core_meta_tuples();
extern void test_core_meta_all_of();
extern void test_core_meta_count();
extern void test_core_meta_find();
extern void test_core_meta_in_list();
extern void test_core_meta_is_empty();
extern void test_core_meta_is_unique();
extern void test_core_meta_length_of();
extern void test_core_meta_typelist_function_call();
extern void test_core_meta_operator_detection();
extern void test_core_meta_function_detection();
extern void test_core_meta_type_categories();
extern void test_core_meta_associated_types();
extern void test_core_meta_iterator_utilities();
extern void test_core_mirror_map_construct();
extern void test_core_mirror_map_iterators();
extern void test_core_mirror_map_insert();
extern void test_core_mirror_map_erase();
extern void test_core_mirror_map_search();
extern void test_core_mirror_map_duplicates();
extern void test_core_mp_integer_unsigned_conversion();
extern void test_core_mp_integer_unsigned_arithmetic();
extern void test_core_mp_integer_unsigned_bit_operations();
extern void test_core_mp_integer_unsigned_byte_operations();
extern void test_core_mp_integer_unsigned_random();
extern void test_core_mp_integer_signed_conversion();
extern void test_core_mp_integer_signed_arithmetic();
extern void test_core_mp_integer_signed_random();
extern void test_core_mp_integer_literals();
extern void test_core_mp_integer_core_functions();
extern void test_core_mp_integer_hash_set();
extern void test_core_mp_integer_numeric_limits();
extern void test_core_mp_integer_rational_basics();
extern void test_core_mp_integer_rational_reduction();
extern void test_core_mp_integer_rational_arithmetic();
extern void test_core_mp_integer_rational_properties();
extern void test_core_mp_integer_rational_comparison();
extern void test_core_mp_integer_rational_mixed();
extern void test_core_mp_integer_rational_parsing();
extern void test_core_net_ipv4();
extern void test_core_net_ipv6();
extern void test_core_net_socket_address();
extern void test_core_net_ip_literals();
extern void test_core_net_dns_query();
extern void test_core_net_tcp_client_server();
extern void test_core_net_socket_set();
extern void test_core_optional_basic_operations();
extern void test_core_optional_object_accounting();
extern void test_core_optional_comparison_operators();
extern void test_core_optional_coalescing_operators();
extern void test_core_optional_function_calls();
extern void test_core_ordered_map_insertion();
extern void test_core_ordered_map_comparison();
extern void test_core_prime_iterator_basic_int();
extern void test_core_prime_iterator_fixed_binary();
extern void test_core_prime_iterator_int128();
extern void test_core_prime_iterator_mp_integer();
extern void test_core_prime_primality_basic_int();
extern void test_core_prime_primality_fixed_binary();
extern void test_core_prime_primality_int128();
extern void test_core_prime_primality_mp_integer();
extern void test_core_prime_next_prev_prime_basic_int();
extern void test_core_prime_next_prev_prime_fixed_binary();
extern void test_core_prime_next_prev_prime_int128();
extern void test_core_prime_next_prev_prime_mp_integer();
extern void test_core_prime_factorization_basic_int();
extern void test_core_prime_factorization_fixed_binary();
extern void test_core_prime_factorization_int128();
extern void test_core_prime_factorization_mp_integer();
extern void test_core_prime_list_primes_basic_int();
extern void test_core_prime_list_primes_fixed_binary();
extern void test_core_prime_list_primes_int128();
extern void test_core_prime_list_primes_mp_integer();
extern void test_core_process_stream();
extern void test_core_process_text();
extern void test_core_process_shell_command();
extern void test_core_process_preview_file();
extern void test_core_random_lcg();
extern void test_core_random_isaac32();
extern void test_core_random_isaac64();
extern void test_core_random_pcg32();
extern void test_core_random_pcg64();
extern void test_core_random_splitmix64();
extern void test_core_random_xoroshiro64s();
extern void test_core_random_xoroshiro64ss();
extern void test_core_random_xoroshiro128p();
extern void test_core_random_xoroshiro128ss();
extern void test_core_random_xoshiro128p();
extern void test_core_random_xoshiro128ss();
extern void test_core_random_xoshiro256p();
extern void test_core_random_xoshiro256ss();
extern void test_core_random_generic_rng();
extern void test_core_random_device_rng();
extern void test_core_random_basic_distributions();
extern void test_core_random_discrete_normal_distribution();
extern void test_core_random_triangular_distribution();
extern void test_core_random_poisson_distribution();
extern void test_core_random_beta_distribution();
extern void test_core_random_sample();
extern void test_core_random_uniform_integer_distribution_properties();
extern void test_core_random_binomial_distribution_properties();
extern void test_core_random_dice_distribution_properties();
extern void test_core_random_uniform_real_distribution_properties();
extern void test_core_random_normal_distribution_properties();
extern void test_core_random_uniform_choice_distribution();
extern void test_core_random_weighted_choice_distribution();
extern void test_core_random_vectors();
extern void test_core_random_random_in_sphere();
extern void test_core_random_random_on_sphere();
extern void test_core_random_unique_distribution();
extern void test_core_random_chi_squared_distribution_properties();
extern void test_core_random_bytes();
extern void test_core_random_shuffle();
extern void test_core_random_seed_sequence();
extern void test_core_random_text_generators();
extern void test_core_range_aggregation_adjacent_difference();
extern void test_core_range_aggregation_census();
extern void test_core_range_aggregation_collect_groups();
extern void test_core_range_aggregation_group();
extern void test_core_range_aggregation_partial_sum();
extern void test_core_range_combination_compare();
extern void test_core_range_combination_concat();
extern void test_core_range_combination_inner_product();
extern void test_core_range_combination_interleave();
extern void test_core_range_combination_merge();
extern void test_core_range_combination_outer_product();
extern void test_core_range_combination_set_difference();
extern void test_core_range_combination_set_difference_from();
extern void test_core_range_combination_set_intersection();
extern void test_core_range_combination_set_symmetric_difference();
extern void test_core_range_combination_set_union();
extern void test_core_range_combination_zip();
extern void test_core_range_core_output();
extern void test_core_range_core_passthrough();
extern void test_core_range_core_collect();
extern void test_core_range_core_each();
extern void test_core_range_core_combinator();
extern void test_core_range_expansion_combinations();
extern void test_core_range_expansion_flat_map();
extern void test_core_range_expansion_flatten();
extern void test_core_range_expansion_insert_algorithms();
extern void test_core_range_expansion_permutations();
extern void test_core_range_expansion_repeat();
extern void test_core_range_expansion_subsets();
extern void test_core_range_generation_epsilon();
extern void test_core_range_generation_fill();
extern void test_core_range_generation_generate();
extern void test_core_range_generation_iota();
extern void test_core_range_generation_random();
extern void test_core_range_generation_single();
extern void test_core_range_permutation_permutations();
extern void test_core_range_permutation_reverse();
extern void test_core_range_permutation_shuffle();
extern void test_core_range_permutation_sort();
extern void test_core_range_reduction_all_any_none();
extern void test_core_range_reduction_count();
extern void test_core_range_reduction_fold();
extern void test_core_range_reduction_is_empty();
extern void test_core_range_reduction_is_sorted();
extern void test_core_range_reduction_min_max();
extern void test_core_range_reduction_reduce();
extern void test_core_range_reduction_sum_product();
extern void test_core_range_selection_before_etc();
extern void test_core_range_selection_filter();
extern void test_core_range_selection_not_null();
extern void test_core_range_selection_remove();
extern void test_core_range_selection_sample();
extern void test_core_range_selection_skip_take();
extern void test_core_range_selection_stride();
extern void test_core_range_selection_unique();
extern void test_core_range_transformation_pointer_casts();
extern void test_core_range_transformation_construct();
extern void test_core_range_transformation_convert();
extern void test_core_range_transformation_dereference();
extern void test_core_range_transformation_indexed();
extern void test_core_range_transformation_iterators();
extern void test_core_range_transformation_keys_values();
extern void test_core_range_transformation_map();
extern void test_core_range_transformation_map_head_tail();
extern void test_core_range_transformation_map_if();
extern void test_core_range_transformation_replace();
extern void test_core_range_transformation_swap_pairs();
extern void test_core_rational_basics();
extern void test_core_rational_reduction();
extern void test_core_rational_arithmetic();
extern void test_core_rational_properties();
extern void test_core_rational_comparison();
extern void test_core_rational_mixed();
extern void test_core_rational_parsing();
extern void test_core_rational_hash_set();
extern void test_core_rational_numeric_limits();
extern void test_core_ring_buffer_basics();
extern void test_core_ring_buffer_accounting_with_copy();
extern void test_core_ring_buffer_accounting_with_move();
extern void test_core_scale_map_class();
extern void test_core_serial_standard_types();
extern void test_core_serial_std_chrono();
extern void test_core_serial_array_map();
extern void test_core_serial_auto_array();
extern void test_core_serial_blob();
extern void test_core_serial_bounded_array();
extern void test_core_serial_compact_array();
extern void test_core_serial_grid();
extern void test_core_serial_mirror_map();
extern void test_core_serial_ordered_map();
extern void test_core_serial_vector_matrix_quaternion();
extern void test_core_serial_endian();
extern void test_core_serial_multiprecision_integers();
extern void test_core_serial_optional();
extern void test_core_serial_rational();
extern void test_core_serial_uuid();
extern void test_core_serial_version();
extern void test_core_serial_xcolour();
extern void test_core_serial_enum_helper_functions();
extern void test_core_serial_struct_helper_functions();
extern void test_core_serial_persistent_storage();
extern void test_core_signal_channel();
extern void test_core_signal_name();
extern void test_core_stack_class();
extern void test_core_statistics_basic_parameters();
extern void test_core_statistics_frequency_weighting();
extern void test_core_statistics_fisher_cumulant_test();
extern void test_core_string_literals();
extern void test_core_string_case_conversion();
extern void test_core_string_character();
extern void test_core_string_property();
extern void test_core_string_manipulation();
extern void test_core_string_formatting();
extern void test_core_string_html_xml_tags();
extern void test_core_table_class();
extern void test_core_terminal_xterm_control_codes();
extern void test_core_terminal_xterm_colour_class();
extern void test_core_thread_pool_class();
extern void test_core_thread_pool_timing();
extern void test_core_time_date_types();
extern void test_core_time_convert_time_point();
extern void test_core_time_general_operations();
extern void test_core_time_system_specific_conversions();
extern void test_core_time_parse_date();
extern void test_core_time_parse_time();
extern void test_core_time_wait_base();
extern void test_core_time_poll_base();
extern void test_core_time_poll_condition();
extern void test_core_time_timer();
extern void test_core_topological_order_algorithm();
extern void test_core_topological_order_reverse();
extern void test_core_url_parse_http();
extern void test_core_url_parse_file();
extern void test_core_url_parse_mailto();
extern void test_core_url_assembly();
extern void test_core_url_modifiers();
extern void test_core_url_navigation();
extern void test_core_url_encoding();
extern void test_core_url_query();
extern void test_core_uuid_class();
extern void test_core_variant_types();
extern void test_core_variant_behaviour();
extern void test_core_variant_function_call();
extern void test_core_variant_comparison();
extern void test_core_vector_integer();
extern void test_core_vector_floating();
extern void test_core_vector_matrix();
extern void test_core_vector_matrix_inversion();
extern void test_core_vector_quaternion();
extern void test_core_vector_2d_coordinate_transformations();
extern void test_core_vector_3d_coordinate_transformations();
extern void test_core_vector_projective_geometry();
extern void test_core_vector_transform_primitives();
extern void test_core_vector_transform_quaternions();
extern void test_core_zlib_compression();
extern void test_core_zlib_io();

int main() {

    static const RS::UnitTest::test_index index = {

        { "core/common/accountable", test_core_common_accountable },
        { "core/common/preprocessor-macros", test_core_common_preprocessor_macros },
        { "core/common/integer-types", test_core_common_integer_types },
        { "core/common/string-types", test_core_common_string_types },
        { "core/common/metaprogramming", test_core_common_metaprogramming },
        { "core/common/smart-pointers", test_core_common_smart_pointers },
        { "core/common/type-adapters", test_core_common_type_adapters },
        { "core/common/type-related-functions", test_core_common_type_related_functions },
        { "core/common/arithmetic-literals", test_core_common_arithmetic_literals },
        { "core/common/generic-algorithms", test_core_common_generic_algorithms },
        { "core/common/integer-sequences", test_core_common_integer_sequences },
        { "core/common/memory-algorithms", test_core_common_memory_algorithms },
        { "core/common/generic-arithmetic", test_core_common_generic_arithmetic },
        { "core/common/integer-arithmetic", test_core_common_integer_arithmetic },
        { "core/common/function-traits", test_core_common_function_traits },
        { "core/common/function-operations", test_core_common_function_operations },
        { "core/common/generic-function-objects", test_core_common_generic_function_objects },
        { "core/common/hash-functions", test_core_common_hash_functions },
        { "core/common/scope-guards", test_core_common_scope_guards },
        { "core/common/logging", test_core_common_logging },
        { "core/common/thread-class", test_core_common_thread_class },
        { "core/algorithm/diff", test_core_algorithm_diff },
        { "core/algorithm/edit-distance", test_core_algorithm_edit_distance },
        { "core/algorithm/find-optimum", test_core_algorithm_find_optimum },
        { "core/algorithm/order-by-index", test_core_algorithm_order_by_index },
        { "core/algorithm/paired-for-each", test_core_algorithm_paired_for_each },
        { "core/algorithm/paired-sort", test_core_algorithm_paired_sort },
        { "core/algorithm/paired-transform", test_core_algorithm_paired_transform },
        { "core/array-map/array-map", test_core_array_map_array_map },
        { "core/array-map/array-set", test_core_array_map_array_set },
        { "core/array-map/general-associative-containers", test_core_array_map_general_associative_containers },
        { "core/astronomy/interpolation-map", test_core_astronomy_interpolation_map },
        { "core/astronomy/physical-constants", test_core_astronomy_physical_constants },
        { "core/astronomy/astronomical-constants", test_core_astronomy_astronomical_constants },
        { "core/astronomy/coordinate-systems", test_core_astronomy_coordinate_systems },
        { "core/astronomy/solar-system-data", test_core_astronomy_solar_system_data },
        { "core/astronomy/stellar-property-relations", test_core_astronomy_stellar_property_relations },
        { "core/astronomy/spectral-classification", test_core_astronomy_spectral_classification },
        { "core/astronomy/hertzsprung-russell-diagram", test_core_astronomy_hertzsprung_russell_diagram },
        { "core/auto-array/auto-vector-construction", test_core_auto_array_auto_vector_construction },
        { "core/auto-array/auto-vector-defaults", test_core_auto_array_auto_vector_defaults },
        { "core/auto-array/auto-vector-element-access", test_core_auto_array_auto_vector_element_access },
        { "core/auto-array/auto-vector-insert-erase", test_core_auto_array_auto_vector_insert_erase },
        { "core/auto-array/auto-vector-comparison", test_core_auto_array_auto_vector_comparison },
        { "core/auto-array/auto-deque-construction", test_core_auto_array_auto_deque_construction },
        { "core/auto-array/auto-deque-defaults", test_core_auto_array_auto_deque_defaults },
        { "core/auto-array/auto-deque-element-access", test_core_auto_array_auto_deque_element_access },
        { "core/auto-array/auto-deque-insert-erase", test_core_auto_array_auto_deque_insert_erase },
        { "core/auto-array/auto-deque-comparison", test_core_auto_array_auto_deque_comparison },
        { "core/blob/class", test_core_blob_class },
        { "core/bounded-array/construction", test_core_bounded_array_construction },
        { "core/bounded-array/capacity", test_core_bounded_array_capacity },
        { "core/bounded-array/insertion", test_core_bounded_array_insertion },
        { "core/bounded-array/accounting", test_core_bounded_array_accounting },
        { "core/bounded-array/keys", test_core_bounded_array_keys },
        { "core/cache/class", test_core_cache_class },
        { "core/channel/true", test_core_channel_true },
        { "core/channel/false", test_core_channel_false },
        { "core/channel/generator", test_core_channel_generator },
        { "core/channel/buffer", test_core_channel_buffer },
        { "core/channel/queue", test_core_channel_queue },
        { "core/channel/value", test_core_channel_value },
        { "core/channel/timer", test_core_channel_timer },
        { "core/channel/throttle", test_core_channel_throttle },
        { "core/channel/dispatch-empty", test_core_channel_dispatch_empty },
        { "core/channel/dispatch-sync-close", test_core_channel_dispatch_sync_close },
        { "core/channel/dispatch-async-close", test_core_channel_dispatch_async_close },
        { "core/channel/dispatch-sync-exception", test_core_channel_dispatch_sync_exception },
        { "core/channel/dispatch-async-exception", test_core_channel_dispatch_async_exception },
        { "core/channel/dispatch-multiple-sync-exception", test_core_channel_dispatch_multiple_sync_exception },
        { "core/channel/dispatch-multiple-async-exception", test_core_channel_dispatch_multiple_async_exception },
        { "core/channel/dispatch-heterogeneous-sync-exception", test_core_channel_dispatch_heterogeneous_sync_exception },
        { "core/channel/dispatch-heterogeneous-async-exception", test_core_channel_dispatch_heterogeneous_async_exception },
        { "core/channel/dispatch-sync-message-channel", test_core_channel_dispatch_sync_message_channel },
        { "core/channel/dispatch-async-message-channel", test_core_channel_dispatch_async_message_channel },
        { "core/channel/dispatch-sync-stream-channel", test_core_channel_dispatch_sync_stream_channel },
        { "core/channel/dispatch-async-stream-channel", test_core_channel_dispatch_async_stream_channel },
        { "core/compact-array/construction", test_core_compact_array_construction },
        { "core/compact-array/capacity", test_core_compact_array_capacity },
        { "core/compact-array/insertion", test_core_compact_array_insertion },
        { "core/compact-array/accounting", test_core_compact_array_accounting },
        { "core/compact-array/keys", test_core_compact_array_keys },
        { "core/digest/bernstein", test_core_digest_bernstein },
        { "core/digest/kernighan", test_core_digest_kernighan },
        { "core/digest/crc32", test_core_digest_crc32 },
        { "core/digest/djb2a", test_core_digest_djb2a },
        { "core/digest/fnv1a-32", test_core_digest_fnv1a_32 },
        { "core/digest/fnv1a-64", test_core_digest_fnv1a_64 },
        { "core/digest/murmur3-32", test_core_digest_murmur3_32 },
        { "core/digest/siphash", test_core_digest_siphash },
        { "core/digest/md5", test_core_digest_md5 },
        { "core/digest/sha1", test_core_digest_sha1 },
        { "core/digest/sha256", test_core_digest_sha256 },
        { "core/digest/sha512", test_core_digest_sha512 },
        { "core/dso/dynamic-library", test_core_dso_dynamic_library },
        { "core/encoding/escape", test_core_encoding_escape },
        { "core/encoding/quote", test_core_encoding_quote },
        { "core/encoding/hex", test_core_encoding_hex },
        { "core/encoding/base32", test_core_encoding_base32 },
        { "core/encoding/base64", test_core_encoding_base64 },
        { "core/encoding/ascii85", test_core_encoding_ascii85 },
        { "core/encoding/z85", test_core_encoding_z85 },
        { "source/english/case-conversion", test_source_english_case_conversion },
        { "source/english/list-formatting", test_source_english_list_formatting },
        { "source/english/number-formatting", test_source_english_number_formatting },
        { "source/english/pluralization", test_source_english_pluralization },
        { "core/file-system/standard-directories", test_core_file_system_standard_directories },
        { "core/file-system/search-path", test_core_file_system_search_path },
        { "core/fixed-binary/implementation-selection", test_core_fixed_binary_implementation_selection },
        { "core/fixed-binary/small-binary", test_core_fixed_binary_small_binary },
        { "core/fixed-binary/large-binary", test_core_fixed_binary_large_binary },
        { "core/fixed-binary/random-numbers", test_core_fixed_binary_random_numbers },
        { "core/fixed-binary/random-arithmetic-tests", test_core_fixed_binary_random_arithmetic_tests },
        { "core/fixed-binary/type-conversions", test_core_fixed_binary_type_conversions },
        { "core/fixed-binary/string-parsing", test_core_fixed_binary_string_parsing },
        { "core/fixed-binary/hash-set", test_core_fixed_binary_hash_set },
        { "core/fixed-binary/numeric-limits", test_core_fixed_binary_numeric_limits },
        { "core/float/arithmetic-constants", test_core_float_arithmetic_constants },
        { "core/float/arithmetic-functions", test_core_float_arithmetic_functions },
        { "core/float/arithmetic-literals", test_core_float_arithmetic_literals },
        { "core/float/line-integral", test_core_float_line_integral },
        { "core/float/volume-integral", test_core_float_volume_integral },
        { "core/float/precision-sum", test_core_float_precision_sum },
        { "core/float/root-finding-parameters", test_core_float_root_finding_parameters },
        { "core/float/bisection", test_core_float_bisection },
        { "core/float/false-position", test_core_float_false_position },
        { "core/float/newton-raphson", test_core_float_newton_raphson },
        { "core/float/pseudo-newton-raphson", test_core_float_pseudo_newton_raphson },
        { "core/grid/class", test_core_grid_class },
        { "core/index-table/classes", test_core_index_table_classes },
        { "core/int128/uint128-basics", test_core_int128_uint128_basics },
        { "core/int128/uint128-arithmetic", test_core_int128_uint128_arithmetic },
        { "core/int128/uint128-bitwise-properties", test_core_int128_uint128_bitwise_properties },
        { "core/int128/uint128-conversion", test_core_int128_uint128_conversion },
        { "core/int128/uint128-representation", test_core_int128_uint128_representation },
        { "core/int128/uint128-literals", test_core_int128_uint128_literals },
        { "core/int128/uint128-numeric-limits", test_core_int128_uint128_numeric_limits },
        { "source/interval-basic/type-traits", test_source_interval_basic_type_traits },
        { "source/interval-continuous/basic-properties", test_source_interval_continuous_basic_properties },
        { "source/interval-continuous/string-parsing", test_source_interval_continuous_string_parsing },
        { "source/interval-continuous/inverse", test_source_interval_continuous_inverse },
        { "source/interval-continuous/binary-operations", test_source_interval_continuous_binary_operations },
        { "source/interval-continuous/set-construct-insert-erase", test_source_interval_continuous_set_construct_insert_erase },
        { "source/interval-continuous/set-operations", test_source_interval_continuous_set_operations },
        { "source/interval-continuous/map", test_source_interval_continuous_map },
        { "source/interval-integral/basic-properties", test_source_interval_integral_basic_properties },
        { "source/interval-integral/string-parsing", test_source_interval_integral_string_parsing },
        { "source/interval-integral/iterators", test_source_interval_integral_iterators },
        { "source/interval-integral/inverse", test_source_interval_integral_inverse },
        { "source/interval-integral/binary-operations", test_source_interval_integral_binary_operations },
        { "source/interval-integral/set-construct-insert-erase", test_source_interval_integral_set_construct_insert_erase },
        { "source/interval-integral/set-operations", test_source_interval_integral_set_operations },
        { "source/interval-integral/map", test_source_interval_integral_map },
        { "source/interval-ordered/basic-properties", test_source_interval_ordered_basic_properties },
        { "source/interval-ordered/string-parsing", test_source_interval_ordered_string_parsing },
        { "source/interval-ordered/inverse", test_source_interval_ordered_inverse },
        { "source/interval-ordered/binary-operations", test_source_interval_ordered_binary_operations },
        { "source/interval-ordered/set-construct-insert-erase", test_source_interval_ordered_set_construct_insert_erase },
        { "source/interval-ordered/set-operations", test_source_interval_ordered_set_operations },
        { "source/interval-ordered/map", test_source_interval_ordered_map },
        { "core/io/cstdio", test_core_io_cstdio },
        { "core/io/fdio", test_core_io_fdio },
        { "core/io/pipe", test_core_io_pipe },
        { "core/io/winio", test_core_io_winio },
        { "core/io/null-device", test_core_io_null_device },
        { "core/io/external-buffer", test_core_io_external_buffer },
        { "core/io/internal-buffer", test_core_io_internal_buffer },
        { "core/io/print-formatting", test_core_io_print_formatting },
        { "core/io/anonymous-temporary-file", test_core_io_anonymous_temporary_file },
        { "core/io/named-temporary-file", test_core_io_named_temporary_file },
        { "core/ipc/named-mutex", test_core_ipc_named_mutex },
        { "source/marked/value-access", test_source_marked_value_access },
        { "source/marked/conversion-operators", test_source_marked_conversion_operators },
        { "source/marked/copying-and-moving", test_source_marked_copying_and_moving },
        { "source/marked/string-conversion", test_source_marked_string_conversion },
        { "source/marked/json-conversion", test_source_marked_json_conversion },
        { "source/marked/boolean-conversion", test_source_marked_boolean_conversion },
        { "source/marked/comparison-operators", test_source_marked_comparison_operators },
        { "source/marked/arithmetic-operators", test_source_marked_arithmetic_operators },
        { "source/marked/function-call-operators", test_source_marked_function_call_operators },
        { "source/marked/subscript-operators", test_source_marked_subscript_operators },
        { "source/marked/hash-functions", test_source_marked_hash_functions },
        { "source/marked/checked-values", test_source_marked_checked_values },
        { "core/meta/logic", test_core_meta_logic },
        { "core/meta/append", test_core_meta_append },
        { "core/meta/concat", test_core_meta_concat },
        { "core/meta/insert", test_core_meta_insert },
        { "core/meta/insert-at", test_core_meta_insert_at },
        { "core/meta/most", test_core_meta_most },
        { "core/meta/prefix", test_core_meta_prefix },
        { "core/meta/rep-list", test_core_meta_rep_list },
        { "core/meta/rep-type", test_core_meta_rep_type },
        { "core/meta/resize", test_core_meta_resize },
        { "core/meta/skip", test_core_meta_skip },
        { "core/meta/sublist", test_core_meta_sublist },
        { "core/meta/tail", test_core_meta_tail },
        { "core/meta/take", test_core_meta_take },
        { "core/meta/head", test_core_meta_head },
        { "core/meta/last", test_core_meta_last },
        { "core/meta/max-type", test_core_meta_max_type },
        { "core/meta/type-at", test_core_meta_type_at },
        { "core/meta/fold", test_core_meta_fold },
        { "core/meta/make-set", test_core_meta_make_set },
        { "core/meta/map", test_core_meta_map },
        { "core/meta/partial-reduce", test_core_meta_partial_reduce },
        { "core/meta/remove", test_core_meta_remove },
        { "core/meta/reverse", test_core_meta_reverse },
        { "core/meta/select", test_core_meta_select },
        { "core/meta/sort", test_core_meta_sort },
        { "core/meta/unique", test_core_meta_unique },
        { "core/meta/zip", test_core_meta_zip },
        { "core/meta/inherit", test_core_meta_inherit },
        { "core/meta/tuples", test_core_meta_tuples },
        { "core/meta/all-of", test_core_meta_all_of },
        { "core/meta/count", test_core_meta_count },
        { "core/meta/find", test_core_meta_find },
        { "core/meta/in-list", test_core_meta_in_list },
        { "core/meta/is-empty", test_core_meta_is_empty },
        { "core/meta/is-unique", test_core_meta_is_unique },
        { "core/meta/length-of", test_core_meta_length_of },
        { "core/meta/typelist-function-call", test_core_meta_typelist_function_call },
        { "core/meta/operator-detection", test_core_meta_operator_detection },
        { "core/meta/function-detection", test_core_meta_function_detection },
        { "core/meta/type-categories", test_core_meta_type_categories },
        { "core/meta/associated-types", test_core_meta_associated_types },
        { "core/meta/iterator-utilities", test_core_meta_iterator_utilities },
        { "core/mirror-map/construct", test_core_mirror_map_construct },
        { "core/mirror-map/iterators", test_core_mirror_map_iterators },
        { "core/mirror-map/insert", test_core_mirror_map_insert },
        { "core/mirror-map/erase", test_core_mirror_map_erase },
        { "core/mirror-map/search", test_core_mirror_map_search },
        { "core/mirror-map/duplicates", test_core_mirror_map_duplicates },
        { "core/mp-integer/unsigned-conversion", test_core_mp_integer_unsigned_conversion },
        { "core/mp-integer/unsigned-arithmetic", test_core_mp_integer_unsigned_arithmetic },
        { "core/mp-integer/unsigned-bit-operations", test_core_mp_integer_unsigned_bit_operations },
        { "core/mp-integer/unsigned-byte-operations", test_core_mp_integer_unsigned_byte_operations },
        { "core/mp-integer/unsigned-random", test_core_mp_integer_unsigned_random },
        { "core/mp-integer/signed-conversion", test_core_mp_integer_signed_conversion },
        { "core/mp-integer/signed-arithmetic", test_core_mp_integer_signed_arithmetic },
        { "core/mp-integer/signed-random", test_core_mp_integer_signed_random },
        { "core/mp-integer/literals", test_core_mp_integer_literals },
        { "core/mp-integer/core-functions", test_core_mp_integer_core_functions },
        { "core/mp-integer/hash-set", test_core_mp_integer_hash_set },
        { "core/mp-integer/numeric-limits", test_core_mp_integer_numeric_limits },
        { "core/mp-integer/rational-basics", test_core_mp_integer_rational_basics },
        { "core/mp-integer/rational-reduction", test_core_mp_integer_rational_reduction },
        { "core/mp-integer/rational-arithmetic", test_core_mp_integer_rational_arithmetic },
        { "core/mp-integer/rational-properties", test_core_mp_integer_rational_properties },
        { "core/mp-integer/rational-comparison", test_core_mp_integer_rational_comparison },
        { "core/mp-integer/rational-mixed", test_core_mp_integer_rational_mixed },
        { "core/mp-integer/rational-parsing", test_core_mp_integer_rational_parsing },
        { "core/net/ipv4", test_core_net_ipv4 },
        { "core/net/ipv6", test_core_net_ipv6 },
        { "core/net/socket-address", test_core_net_socket_address },
        { "core/net/ip-literals", test_core_net_ip_literals },
        { "core/net/dns-query", test_core_net_dns_query },
        { "core/net/tcp-client-server", test_core_net_tcp_client_server },
        { "core/net/socket-set", test_core_net_socket_set },
        { "core/optional/basic-operations", test_core_optional_basic_operations },
        { "core/optional/object-accounting", test_core_optional_object_accounting },
        { "core/optional/comparison-operators", test_core_optional_comparison_operators },
        { "core/optional/coalescing-operators", test_core_optional_coalescing_operators },
        { "core/optional/function-calls", test_core_optional_function_calls },
        { "core/ordered-map/insertion", test_core_ordered_map_insertion },
        { "core/ordered-map/comparison", test_core_ordered_map_comparison },
        { "core/prime/iterator-basic-int", test_core_prime_iterator_basic_int },
        { "core/prime/iterator-fixed-binary", test_core_prime_iterator_fixed_binary },
        { "core/prime/iterator-int128", test_core_prime_iterator_int128 },
        { "core/prime/iterator-mp-integer", test_core_prime_iterator_mp_integer },
        { "core/prime/primality-basic-int", test_core_prime_primality_basic_int },
        { "core/prime/primality-fixed-binary", test_core_prime_primality_fixed_binary },
        { "core/prime/primality-int128", test_core_prime_primality_int128 },
        { "core/prime/primality-mp-integer", test_core_prime_primality_mp_integer },
        { "core/prime/next-prev-prime-basic-int", test_core_prime_next_prev_prime_basic_int },
        { "core/prime/next-prev-prime-fixed-binary", test_core_prime_next_prev_prime_fixed_binary },
        { "core/prime/next-prev-prime-int128", test_core_prime_next_prev_prime_int128 },
        { "core/prime/next-prev-prime-mp-integer", test_core_prime_next_prev_prime_mp_integer },
        { "core/prime/factorization-basic-int", test_core_prime_factorization_basic_int },
        { "core/prime/factorization-fixed-binary", test_core_prime_factorization_fixed_binary },
        { "core/prime/factorization-int128", test_core_prime_factorization_int128 },
        { "core/prime/factorization-mp-integer", test_core_prime_factorization_mp_integer },
        { "core/prime/list-primes-basic-int", test_core_prime_list_primes_basic_int },
        { "core/prime/list-primes-fixed-binary", test_core_prime_list_primes_fixed_binary },
        { "core/prime/list-primes-int128", test_core_prime_list_primes_int128 },
        { "core/prime/list-primes-mp-integer", test_core_prime_list_primes_mp_integer },
        { "core/process/stream", test_core_process_stream },
        { "core/process/text", test_core_process_text },
        { "core/process/shell-command", test_core_process_shell_command },
        { "core/process/preview-file", test_core_process_preview_file },
        { "core/random/lcg", test_core_random_lcg },
        { "core/random/isaac32", test_core_random_isaac32 },
        { "core/random/isaac64", test_core_random_isaac64 },
        { "core/random/pcg32", test_core_random_pcg32 },
        { "core/random/pcg64", test_core_random_pcg64 },
        { "core/random/splitmix64", test_core_random_splitmix64 },
        { "core/random/xoroshiro64s", test_core_random_xoroshiro64s },
        { "core/random/xoroshiro64ss", test_core_random_xoroshiro64ss },
        { "core/random/xoroshiro128p", test_core_random_xoroshiro128p },
        { "core/random/xoroshiro128ss", test_core_random_xoroshiro128ss },
        { "core/random/xoshiro128p", test_core_random_xoshiro128p },
        { "core/random/xoshiro128ss", test_core_random_xoshiro128ss },
        { "core/random/xoshiro256p", test_core_random_xoshiro256p },
        { "core/random/xoshiro256ss", test_core_random_xoshiro256ss },
        { "core/random/generic-rng", test_core_random_generic_rng },
        { "core/random/device-rng", test_core_random_device_rng },
        { "core/random/basic-distributions", test_core_random_basic_distributions },
        { "core/random/discrete-normal-distribution", test_core_random_discrete_normal_distribution },
        { "core/random/triangular-distribution", test_core_random_triangular_distribution },
        { "core/random/poisson-distribution", test_core_random_poisson_distribution },
        { "core/random/beta-distribution", test_core_random_beta_distribution },
        { "core/random/sample", test_core_random_sample },
        { "core/random/uniform-integer-distribution-properties", test_core_random_uniform_integer_distribution_properties },
        { "core/random/binomial-distribution-properties", test_core_random_binomial_distribution_properties },
        { "core/random/dice-distribution-properties", test_core_random_dice_distribution_properties },
        { "core/random/uniform-real-distribution-properties", test_core_random_uniform_real_distribution_properties },
        { "core/random/normal-distribution-properties", test_core_random_normal_distribution_properties },
        { "core/random/uniform-choice-distribution", test_core_random_uniform_choice_distribution },
        { "core/random/weighted-choice-distribution", test_core_random_weighted_choice_distribution },
        { "core/random/vectors", test_core_random_vectors },
        { "core/random/random-in-sphere", test_core_random_random_in_sphere },
        { "core/random/random-on-sphere", test_core_random_random_on_sphere },
        { "core/random/unique-distribution", test_core_random_unique_distribution },
        { "core/random/chi-squared-distribution-properties", test_core_random_chi_squared_distribution_properties },
        { "core/random/bytes", test_core_random_bytes },
        { "core/random/shuffle", test_core_random_shuffle },
        { "core/random/seed-sequence", test_core_random_seed_sequence },
        { "core/random/text-generators", test_core_random_text_generators },
        { "core/range-aggregation/adjacent-difference", test_core_range_aggregation_adjacent_difference },
        { "core/range-aggregation/census", test_core_range_aggregation_census },
        { "core/range-aggregation/collect-groups", test_core_range_aggregation_collect_groups },
        { "core/range-aggregation/group", test_core_range_aggregation_group },
        { "core/range-aggregation/partial-sum", test_core_range_aggregation_partial_sum },
        { "core/range-combination/compare", test_core_range_combination_compare },
        { "core/range-combination/concat", test_core_range_combination_concat },
        { "core/range-combination/inner-product", test_core_range_combination_inner_product },
        { "core/range-combination/interleave", test_core_range_combination_interleave },
        { "core/range-combination/merge", test_core_range_combination_merge },
        { "core/range-combination/outer-product", test_core_range_combination_outer_product },
        { "core/range-combination/set-difference", test_core_range_combination_set_difference },
        { "core/range-combination/set-difference-from", test_core_range_combination_set_difference_from },
        { "core/range-combination/set-intersection", test_core_range_combination_set_intersection },
        { "core/range-combination/set-symmetric-difference", test_core_range_combination_set_symmetric_difference },
        { "core/range-combination/set-union", test_core_range_combination_set_union },
        { "core/range-combination/zip", test_core_range_combination_zip },
        { "core/range-core/output", test_core_range_core_output },
        { "core/range-core/passthrough", test_core_range_core_passthrough },
        { "core/range-core/collect", test_core_range_core_collect },
        { "core/range-core/each", test_core_range_core_each },
        { "core/range-core/combinator", test_core_range_core_combinator },
        { "core/range-expansion/combinations", test_core_range_expansion_combinations },
        { "core/range-expansion/flat-map", test_core_range_expansion_flat_map },
        { "core/range-expansion/flatten", test_core_range_expansion_flatten },
        { "core/range-expansion/insert-algorithms", test_core_range_expansion_insert_algorithms },
        { "core/range-expansion/permutations", test_core_range_expansion_permutations },
        { "core/range-expansion/repeat", test_core_range_expansion_repeat },
        { "core/range-expansion/subsets", test_core_range_expansion_subsets },
        { "core/range-generation/epsilon", test_core_range_generation_epsilon },
        { "core/range-generation/fill", test_core_range_generation_fill },
        { "core/range-generation/generate", test_core_range_generation_generate },
        { "core/range-generation/iota", test_core_range_generation_iota },
        { "core/range-generation/random", test_core_range_generation_random },
        { "core/range-generation/single", test_core_range_generation_single },
        { "core/range-permutation/permutations", test_core_range_permutation_permutations },
        { "core/range-permutation/reverse", test_core_range_permutation_reverse },
        { "core/range-permutation/shuffle", test_core_range_permutation_shuffle },
        { "core/range-permutation/sort", test_core_range_permutation_sort },
        { "core/range-reduction/all-any-none", test_core_range_reduction_all_any_none },
        { "core/range-reduction/count", test_core_range_reduction_count },
        { "core/range-reduction/fold", test_core_range_reduction_fold },
        { "core/range-reduction/is-empty", test_core_range_reduction_is_empty },
        { "core/range-reduction/is-sorted", test_core_range_reduction_is_sorted },
        { "core/range-reduction/min-max", test_core_range_reduction_min_max },
        { "core/range-reduction/reduce", test_core_range_reduction_reduce },
        { "core/range-reduction/sum-product", test_core_range_reduction_sum_product },
        { "core/range-selection/before-etc", test_core_range_selection_before_etc },
        { "core/range-selection/filter", test_core_range_selection_filter },
        { "core/range-selection/not-null", test_core_range_selection_not_null },
        { "core/range-selection/remove", test_core_range_selection_remove },
        { "core/range-selection/sample", test_core_range_selection_sample },
        { "core/range-selection/skip-take", test_core_range_selection_skip_take },
        { "core/range-selection/stride", test_core_range_selection_stride },
        { "core/range-selection/unique", test_core_range_selection_unique },
        { "core/range-transformation/pointer-casts", test_core_range_transformation_pointer_casts },
        { "core/range-transformation/construct", test_core_range_transformation_construct },
        { "core/range-transformation/convert", test_core_range_transformation_convert },
        { "core/range-transformation/dereference", test_core_range_transformation_dereference },
        { "core/range-transformation/indexed", test_core_range_transformation_indexed },
        { "core/range-transformation/iterators", test_core_range_transformation_iterators },
        { "core/range-transformation/keys-values", test_core_range_transformation_keys_values },
        { "core/range-transformation/map", test_core_range_transformation_map },
        { "core/range-transformation/map-head-tail", test_core_range_transformation_map_head_tail },
        { "core/range-transformation/map-if", test_core_range_transformation_map_if },
        { "core/range-transformation/replace", test_core_range_transformation_replace },
        { "core/range-transformation/swap-pairs", test_core_range_transformation_swap_pairs },
        { "core/rational/basics", test_core_rational_basics },
        { "core/rational/reduction", test_core_rational_reduction },
        { "core/rational/arithmetic", test_core_rational_arithmetic },
        { "core/rational/properties", test_core_rational_properties },
        { "core/rational/comparison", test_core_rational_comparison },
        { "core/rational/mixed", test_core_rational_mixed },
        { "core/rational/parsing", test_core_rational_parsing },
        { "core/rational/hash-set", test_core_rational_hash_set },
        { "core/rational/numeric-limits", test_core_rational_numeric_limits },
        { "core/ring-buffer/basics", test_core_ring_buffer_basics },
        { "core/ring-buffer/accounting-with-copy", test_core_ring_buffer_accounting_with_copy },
        { "core/ring-buffer/accounting-with-move", test_core_ring_buffer_accounting_with_move },
        { "core/scale-map/class", test_core_scale_map_class },
        { "core/serial/standard-types", test_core_serial_standard_types },
        { "core/serial/std-chrono", test_core_serial_std_chrono },
        { "core/serial/array-map", test_core_serial_array_map },
        { "core/serial/auto-array", test_core_serial_auto_array },
        { "core/serial/blob", test_core_serial_blob },
        { "core/serial/bounded-array", test_core_serial_bounded_array },
        { "core/serial/compact-array", test_core_serial_compact_array },
        { "core/serial/grid", test_core_serial_grid },
        { "core/serial/mirror-map", test_core_serial_mirror_map },
        { "core/serial/ordered-map", test_core_serial_ordered_map },
        { "core/serial/vector-matrix-quaternion", test_core_serial_vector_matrix_quaternion },
        { "core/serial/endian", test_core_serial_endian },
        { "core/serial/multiprecision-integers", test_core_serial_multiprecision_integers },
        { "core/serial/optional", test_core_serial_optional },
        { "core/serial/rational", test_core_serial_rational },
        { "core/serial/uuid", test_core_serial_uuid },
        { "core/serial/version", test_core_serial_version },
        { "core/serial/xcolour", test_core_serial_xcolour },
        { "core/serial/enum-helper-functions", test_core_serial_enum_helper_functions },
        { "core/serial/struct-helper-functions", test_core_serial_struct_helper_functions },
        { "core/serial/persistent-storage", test_core_serial_persistent_storage },
        { "core/signal/channel", test_core_signal_channel },
        { "core/signal/name", test_core_signal_name },
        { "core/stack/class", test_core_stack_class },
        { "core/statistics/basic-parameters", test_core_statistics_basic_parameters },
        { "core/statistics/frequency-weighting", test_core_statistics_frequency_weighting },
        { "core/statistics/fisher-cumulant-test", test_core_statistics_fisher_cumulant_test },
        { "core/string/literals", test_core_string_literals },
        { "core/string/case-conversion", test_core_string_case_conversion },
        { "core/string/character", test_core_string_character },
        { "core/string/property", test_core_string_property },
        { "core/string/manipulation", test_core_string_manipulation },
        { "core/string/formatting", test_core_string_formatting },
        { "core/string/html-xml-tags", test_core_string_html_xml_tags },
        { "core/table/class", test_core_table_class },
        { "core/terminal/xterm-control-codes", test_core_terminal_xterm_control_codes },
        { "core/terminal/xterm-colour-class", test_core_terminal_xterm_colour_class },
        { "core/thread-pool/class", test_core_thread_pool_class },
        { "core/thread-pool/timing", test_core_thread_pool_timing },
        { "core/time/date-types", test_core_time_date_types },
        { "core/time/convert-time-point", test_core_time_convert_time_point },
        { "core/time/general-operations", test_core_time_general_operations },
        { "core/time/system-specific-conversions", test_core_time_system_specific_conversions },
        { "core/time/parse-date", test_core_time_parse_date },
        { "core/time/parse-time", test_core_time_parse_time },
        { "core/time/wait-base", test_core_time_wait_base },
        { "core/time/poll-base", test_core_time_poll_base },
        { "core/time/poll-condition", test_core_time_poll_condition },
        { "core/time/timer", test_core_time_timer },
        { "core/topological-order/algorithm", test_core_topological_order_algorithm },
        { "core/topological-order/reverse", test_core_topological_order_reverse },
        { "core/url/parse-http", test_core_url_parse_http },
        { "core/url/parse-file", test_core_url_parse_file },
        { "core/url/parse-mailto", test_core_url_parse_mailto },
        { "core/url/assembly", test_core_url_assembly },
        { "core/url/modifiers", test_core_url_modifiers },
        { "core/url/navigation", test_core_url_navigation },
        { "core/url/encoding", test_core_url_encoding },
        { "core/url/query", test_core_url_query },
        { "core/uuid/class", test_core_uuid_class },
        { "core/variant/types", test_core_variant_types },
        { "core/variant/behaviour", test_core_variant_behaviour },
        { "core/variant/function-call", test_core_variant_function_call },
        { "core/variant/comparison", test_core_variant_comparison },
        { "core/vector/integer", test_core_vector_integer },
        { "core/vector/floating", test_core_vector_floating },
        { "core/vector/matrix", test_core_vector_matrix },
        { "core/vector/matrix-inversion", test_core_vector_matrix_inversion },
        { "core/vector/quaternion", test_core_vector_quaternion },
        { "core/vector/2d-coordinate-transformations", test_core_vector_2d_coordinate_transformations },
        { "core/vector/3d-coordinate-transformations", test_core_vector_3d_coordinate_transformations },
        { "core/vector/projective-geometry", test_core_vector_projective_geometry },
        { "core/vector/transform-primitives", test_core_vector_transform_primitives },
        { "core/vector/transform-quaternions", test_core_vector_transform_quaternions },
        { "core/zlib/compression", test_core_zlib_compression },
        { "core/zlib/io", test_core_zlib_io },

    };

    return RS::UnitTest::test_main(index);

}
